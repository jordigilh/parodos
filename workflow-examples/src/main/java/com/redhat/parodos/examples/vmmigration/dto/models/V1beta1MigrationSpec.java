/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.redhat.parodos.examples.vmmigration.dto.models;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * MigrationSpec defines the desired state of Migration
 */
@ApiModel(description = "MigrationSpec defines the desired state of Migration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
		date = "2023-05-17T23:50:06.262Z[Etc/UTC]")
public class V1beta1MigrationSpec {

	public static final String SERIALIZED_NAME_CANCEL = "cancel";

	@SerializedName(SERIALIZED_NAME_CANCEL)
	private List<V1beta1MigrationSpecCancel> cancel = null;

	public static final String SERIALIZED_NAME_CUTOVER = "cutover";

	@SerializedName(SERIALIZED_NAME_CUTOVER)
	private OffsetDateTime cutover;

	public static final String SERIALIZED_NAME_PLAN = "plan";

	@SerializedName(SERIALIZED_NAME_PLAN)
	private V1beta1MigrationSpecPlan plan;

	public V1beta1MigrationSpec cancel(List<V1beta1MigrationSpecCancel> cancel) {

		this.cancel = cancel;
		return this;
	}

	public V1beta1MigrationSpec addCancelItem(V1beta1MigrationSpecCancel cancelItem) {
		if (this.cancel == null) {
			this.cancel = new ArrayList<>();
		}
		this.cancel.add(cancelItem);
		return this;
	}

	/**
	 * List of VMs which will have their imports canceled.
	 * @return cancel
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "List of VMs which will have their imports canceled.")

	public List<V1beta1MigrationSpecCancel> getCancel() {
		return cancel;
	}

	public void setCancel(List<V1beta1MigrationSpecCancel> cancel) {
		this.cancel = cancel;
	}

	public V1beta1MigrationSpec cutover(OffsetDateTime cutover) {

		this.cutover = cutover;
		return this;
	}

	/**
	 * Date and time to finalize a warm migration. If present, this will override the
	 * value set on the Plan.
	 * @return cutover
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(
			value = "Date and time to finalize a warm migration. If present, this will override the value set on the Plan.")

	public OffsetDateTime getCutover() {
		return cutover;
	}

	public void setCutover(OffsetDateTime cutover) {
		this.cutover = cutover;
	}

	public V1beta1MigrationSpec plan(V1beta1MigrationSpecPlan plan) {

		this.plan = plan;
		return this;
	}

	/**
	 * Get plan
	 * @return plan
	 **/
	@ApiModelProperty(required = true, value = "")

	public V1beta1MigrationSpecPlan getPlan() {
		return plan;
	}

	public void setPlan(V1beta1MigrationSpecPlan plan) {
		this.plan = plan;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		V1beta1MigrationSpec v1beta1MigrationSpec = (V1beta1MigrationSpec) o;
		return Objects.equals(this.cancel, v1beta1MigrationSpec.cancel)
				&& Objects.equals(this.cutover, v1beta1MigrationSpec.cutover)
				&& Objects.equals(this.plan, v1beta1MigrationSpec.plan);
	}

	@Override
	public int hashCode() {
		return Objects.hash(cancel, cutover, plan);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class V1beta1MigrationSpec {\n");
		sb.append("    cancel: ").append(toIndentedString(cancel)).append("\n");
		sb.append("    cutover: ").append(toIndentedString(cutover)).append("\n");
		sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the
	 * first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
