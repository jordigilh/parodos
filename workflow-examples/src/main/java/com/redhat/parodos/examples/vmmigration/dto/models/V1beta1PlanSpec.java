/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.redhat.parodos.examples.vmmigration.dto.models;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * PlanSpec defines the desired state of Plan.
 */
@ApiModel(description = "PlanSpec defines the desired state of Plan.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
		date = "2023-05-17T23:50:06.262Z[Etc/UTC]")
public class V1beta1PlanSpec {

	public static final String SERIALIZED_NAME_ARCHIVED = "archived";

	@SerializedName(SERIALIZED_NAME_ARCHIVED)
	private Boolean archived;

	public static final String SERIALIZED_NAME_DESCRIPTION = "description";

	@SerializedName(SERIALIZED_NAME_DESCRIPTION)
	private String description;

	public static final String SERIALIZED_NAME_MAP = "map";

	@SerializedName(SERIALIZED_NAME_MAP)
	private V1beta1PlanSpecMap map;

	public static final String SERIALIZED_NAME_PROVIDER = "provider";

	@SerializedName(SERIALIZED_NAME_PROVIDER)
	private V1beta1PlanSpecProvider provider;

	public static final String SERIALIZED_NAME_TARGET_NAMESPACE = "targetNamespace";

	@SerializedName(SERIALIZED_NAME_TARGET_NAMESPACE)
	private String targetNamespace;

	public static final String SERIALIZED_NAME_TRANSFER_NETWORK = "transferNetwork";

	@SerializedName(SERIALIZED_NAME_TRANSFER_NETWORK)
	private V1beta1PlanSpecTransferNetwork transferNetwork;

	public static final String SERIALIZED_NAME_VMS = "vms";

	@SerializedName(SERIALIZED_NAME_VMS)
	private List<V1beta1PlanSpecVms> vms = new ArrayList<>();

	public static final String SERIALIZED_NAME_WARM = "warm";

	@SerializedName(SERIALIZED_NAME_WARM)
	private Boolean warm;

	public V1beta1PlanSpec archived(Boolean archived) {

		this.archived = archived;
		return this;
	}

	/**
	 * Whether this plan should be archived.
	 * @return archived
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Whether this plan should be archived.")

	public Boolean getArchived() {
		return archived;
	}

	public void setArchived(Boolean archived) {
		this.archived = archived;
	}

	public V1beta1PlanSpec description(String description) {

		this.description = description;
		return this;
	}

	/**
	 * Description
	 * @return description
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Description")

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public V1beta1PlanSpec map(V1beta1PlanSpecMap map) {

		this.map = map;
		return this;
	}

	/**
	 * Get map
	 * @return map
	 **/
	@ApiModelProperty(required = true, value = "")

	public V1beta1PlanSpecMap getMap() {
		return map;
	}

	public void setMap(V1beta1PlanSpecMap map) {
		this.map = map;
	}

	public V1beta1PlanSpec provider(V1beta1PlanSpecProvider provider) {

		this.provider = provider;
		return this;
	}

	/**
	 * Get provider
	 * @return provider
	 **/
	@ApiModelProperty(required = true, value = "")

	public V1beta1PlanSpecProvider getProvider() {
		return provider;
	}

	public void setProvider(V1beta1PlanSpecProvider provider) {
		this.provider = provider;
	}

	public V1beta1PlanSpec targetNamespace(String targetNamespace) {

		this.targetNamespace = targetNamespace;
		return this;
	}

	/**
	 * Target namespace.
	 * @return targetNamespace
	 **/
	@ApiModelProperty(required = true, value = "Target namespace.")

	public String getTargetNamespace() {
		return targetNamespace;
	}

	public void setTargetNamespace(String targetNamespace) {
		this.targetNamespace = targetNamespace;
	}

	public V1beta1PlanSpec transferNetwork(V1beta1PlanSpecTransferNetwork transferNetwork) {

		this.transferNetwork = transferNetwork;
		return this;
	}

	/**
	 * Get transferNetwork
	 * @return transferNetwork
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public V1beta1PlanSpecTransferNetwork getTransferNetwork() {
		return transferNetwork;
	}

	public void setTransferNetwork(V1beta1PlanSpecTransferNetwork transferNetwork) {
		this.transferNetwork = transferNetwork;
	}

	public V1beta1PlanSpec vms(List<V1beta1PlanSpecVms> vms) {

		this.vms = vms;
		return this;
	}

	public V1beta1PlanSpec addVmsItem(V1beta1PlanSpecVms vmsItem) {
		this.vms.add(vmsItem);
		return this;
	}

	/**
	 * List of VMs.
	 * @return vms
	 **/
	@ApiModelProperty(required = true, value = "List of VMs.")

	public List<V1beta1PlanSpecVms> getVms() {
		return vms;
	}

	public void setVms(List<V1beta1PlanSpecVms> vms) {
		this.vms = vms;
	}

	public V1beta1PlanSpec warm(Boolean warm) {

		this.warm = warm;
		return this;
	}

	/**
	 * Whether this is a warm migration.
	 * @return warm
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Whether this is a warm migration.")

	public Boolean getWarm() {
		return warm;
	}

	public void setWarm(Boolean warm) {
		this.warm = warm;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		V1beta1PlanSpec v1beta1PlanSpec = (V1beta1PlanSpec) o;
		return Objects.equals(this.archived, v1beta1PlanSpec.archived)
				&& Objects.equals(this.description, v1beta1PlanSpec.description)
				&& Objects.equals(this.map, v1beta1PlanSpec.map)
				&& Objects.equals(this.provider, v1beta1PlanSpec.provider)
				&& Objects.equals(this.targetNamespace, v1beta1PlanSpec.targetNamespace)
				&& Objects.equals(this.transferNetwork, v1beta1PlanSpec.transferNetwork)
				&& Objects.equals(this.vms, v1beta1PlanSpec.vms) && Objects.equals(this.warm, v1beta1PlanSpec.warm);
	}

	@Override
	public int hashCode() {
		return Objects.hash(archived, description, map, provider, targetNamespace, transferNetwork, vms, warm);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class V1beta1PlanSpec {\n");
		sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    map: ").append(toIndentedString(map)).append("\n");
		sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
		sb.append("    targetNamespace: ").append(toIndentedString(targetNamespace)).append("\n");
		sb.append("    transferNetwork: ").append(toIndentedString(transferNetwork)).append("\n");
		sb.append("    vms: ").append(toIndentedString(vms)).append("\n");
		sb.append("    warm: ").append(toIndentedString(warm)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the
	 * first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
