/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.redhat.parodos.examples.vmmigration.dto.models;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * VM Status
 */
@ApiModel(description = "VM Status")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
		date = "2023-05-17T23:50:06.262Z[Etc/UTC]")
public class V1beta1MigrationStatusVms {

	public static final String SERIALIZED_NAME_COMPLETED = "completed";

	@SerializedName(SERIALIZED_NAME_COMPLETED)
	private OffsetDateTime completed;

	public static final String SERIALIZED_NAME_CONDITIONS = "conditions";

	@SerializedName(SERIALIZED_NAME_CONDITIONS)
	private List<V1beta1MigrationStatusConditions> conditions = null;

	public static final String SERIALIZED_NAME_ERROR = "error";

	@SerializedName(SERIALIZED_NAME_ERROR)
	private V1beta1MigrationStatusError error;

	public static final String SERIALIZED_NAME_HOOKS = "hooks";

	@SerializedName(SERIALIZED_NAME_HOOKS)
	private List<V1beta1MigrationStatusHooks> hooks = null;

	public static final String SERIALIZED_NAME_ID = "id";

	@SerializedName(SERIALIZED_NAME_ID)
	private String id;

	public static final String SERIALIZED_NAME_NAME = "name";

	@SerializedName(SERIALIZED_NAME_NAME)
	private String name;

	public static final String SERIALIZED_NAME_PHASE = "phase";

	@SerializedName(SERIALIZED_NAME_PHASE)
	private String phase;

	public static final String SERIALIZED_NAME_PIPELINE = "pipeline";

	@SerializedName(SERIALIZED_NAME_PIPELINE)
	private List<V1beta1MigrationStatusPipeline> pipeline = new ArrayList<>();

	public static final String SERIALIZED_NAME_RESTORE_POWER_STATE = "restorePowerState";

	@SerializedName(SERIALIZED_NAME_RESTORE_POWER_STATE)
	private String restorePowerState;

	public static final String SERIALIZED_NAME_STARTED = "started";

	@SerializedName(SERIALIZED_NAME_STARTED)
	private OffsetDateTime started;

	public static final String SERIALIZED_NAME_TYPE = "type";

	@SerializedName(SERIALIZED_NAME_TYPE)
	private String type;

	public static final String SERIALIZED_NAME_WARM = "warm";

	@SerializedName(SERIALIZED_NAME_WARM)
	private V1beta1MigrationStatusWarm warm;

	public V1beta1MigrationStatusVms completed(OffsetDateTime completed) {

		this.completed = completed;
		return this;
	}

	/**
	 * Completed timestamp.
	 * @return completed
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Completed timestamp.")

	public OffsetDateTime getCompleted() {
		return completed;
	}

	public void setCompleted(OffsetDateTime completed) {
		this.completed = completed;
	}

	public V1beta1MigrationStatusVms conditions(List<V1beta1MigrationStatusConditions> conditions) {

		this.conditions = conditions;
		return this;
	}

	public V1beta1MigrationStatusVms addConditionsItem(V1beta1MigrationStatusConditions conditionsItem) {
		if (this.conditions == null) {
			this.conditions = new ArrayList<>();
		}
		this.conditions.add(conditionsItem);
		return this;
	}

	/**
	 * List of conditions.
	 * @return conditions
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "List of conditions.")

	public List<V1beta1MigrationStatusConditions> getConditions() {
		return conditions;
	}

	public void setConditions(List<V1beta1MigrationStatusConditions> conditions) {
		this.conditions = conditions;
	}

	public V1beta1MigrationStatusVms error(V1beta1MigrationStatusError error) {

		this.error = error;
		return this;
	}

	/**
	 * Get error
	 * @return error
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public V1beta1MigrationStatusError getError() {
		return error;
	}

	public void setError(V1beta1MigrationStatusError error) {
		this.error = error;
	}

	public V1beta1MigrationStatusVms hooks(List<V1beta1MigrationStatusHooks> hooks) {

		this.hooks = hooks;
		return this;
	}

	public V1beta1MigrationStatusVms addHooksItem(V1beta1MigrationStatusHooks hooksItem) {
		if (this.hooks == null) {
			this.hooks = new ArrayList<>();
		}
		this.hooks.add(hooksItem);
		return this;
	}

	/**
	 * Enable hooks.
	 * @return hooks
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Enable hooks.")

	public List<V1beta1MigrationStatusHooks> getHooks() {
		return hooks;
	}

	public void setHooks(List<V1beta1MigrationStatusHooks> hooks) {
		this.hooks = hooks;
	}

	public V1beta1MigrationStatusVms id(String id) {

		this.id = id;
		return this;
	}

	/**
	 * The object ID. vsphere: The managed object ID.
	 * @return id
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "The object ID. vsphere:   The managed object ID.")

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public V1beta1MigrationStatusVms name(String name) {

		this.name = name;
		return this;
	}

	/**
	 * An object Name. vsphere: A qualified name.
	 * @return name
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "An object Name. vsphere:   A qualified name.")

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public V1beta1MigrationStatusVms phase(String phase) {

		this.phase = phase;
		return this;
	}

	/**
	 * Phase
	 * @return phase
	 **/
	@ApiModelProperty(required = true, value = "Phase")

	public String getPhase() {
		return phase;
	}

	public void setPhase(String phase) {
		this.phase = phase;
	}

	public V1beta1MigrationStatusVms pipeline(List<V1beta1MigrationStatusPipeline> pipeline) {

		this.pipeline = pipeline;
		return this;
	}

	public V1beta1MigrationStatusVms addPipelineItem(V1beta1MigrationStatusPipeline pipelineItem) {
		this.pipeline.add(pipelineItem);
		return this;
	}

	/**
	 * Migration pipeline.
	 * @return pipeline
	 **/
	@ApiModelProperty(required = true, value = "Migration pipeline.")

	public List<V1beta1MigrationStatusPipeline> getPipeline() {
		return pipeline;
	}

	public void setPipeline(List<V1beta1MigrationStatusPipeline> pipeline) {
		this.pipeline = pipeline;
	}

	public V1beta1MigrationStatusVms restorePowerState(String restorePowerState) {

		this.restorePowerState = restorePowerState;
		return this;
	}

	/**
	 * Source VM power state before migration.
	 * @return restorePowerState
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Source VM power state before migration.")

	public String getRestorePowerState() {
		return restorePowerState;
	}

	public void setRestorePowerState(String restorePowerState) {
		this.restorePowerState = restorePowerState;
	}

	public V1beta1MigrationStatusVms started(OffsetDateTime started) {

		this.started = started;
		return this;
	}

	/**
	 * Started timestamp.
	 * @return started
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Started timestamp.")

	public OffsetDateTime getStarted() {
		return started;
	}

	public void setStarted(OffsetDateTime started) {
		this.started = started;
	}

	public V1beta1MigrationStatusVms type(String type) {

		this.type = type;
		return this;
	}

	/**
	 * Type used to qualify the name.
	 * @return type
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "Type used to qualify the name.")

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public V1beta1MigrationStatusVms warm(V1beta1MigrationStatusWarm warm) {

		this.warm = warm;
		return this;
	}

	/**
	 * Get warm
	 * @return warm
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public V1beta1MigrationStatusWarm getWarm() {
		return warm;
	}

	public void setWarm(V1beta1MigrationStatusWarm warm) {
		this.warm = warm;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		V1beta1MigrationStatusVms v1beta1MigrationStatusVms = (V1beta1MigrationStatusVms) o;
		return Objects.equals(this.completed, v1beta1MigrationStatusVms.completed)
				&& Objects.equals(this.conditions, v1beta1MigrationStatusVms.conditions)
				&& Objects.equals(this.error, v1beta1MigrationStatusVms.error)
				&& Objects.equals(this.hooks, v1beta1MigrationStatusVms.hooks)
				&& Objects.equals(this.id, v1beta1MigrationStatusVms.id)
				&& Objects.equals(this.name, v1beta1MigrationStatusVms.name)
				&& Objects.equals(this.phase, v1beta1MigrationStatusVms.phase)
				&& Objects.equals(this.pipeline, v1beta1MigrationStatusVms.pipeline)
				&& Objects.equals(this.restorePowerState, v1beta1MigrationStatusVms.restorePowerState)
				&& Objects.equals(this.started, v1beta1MigrationStatusVms.started)
				&& Objects.equals(this.type, v1beta1MigrationStatusVms.type)
				&& Objects.equals(this.warm, v1beta1MigrationStatusVms.warm);
	}

	@Override
	public int hashCode() {
		return Objects.hash(completed, conditions, error, hooks, id, name, phase, pipeline, restorePowerState, started,
				type, warm);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class V1beta1MigrationStatusVms {\n");
		sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
		sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
		sb.append("    error: ").append(toIndentedString(error)).append("\n");
		sb.append("    hooks: ").append(toIndentedString(hooks)).append("\n");
		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
		sb.append("    pipeline: ").append(toIndentedString(pipeline)).append("\n");
		sb.append("    restorePowerState: ").append(toIndentedString(restorePowerState)).append("\n");
		sb.append("    started: ").append(toIndentedString(started)).append("\n");
		sb.append("    type: ").append(toIndentedString(type)).append("\n");
		sb.append("    warm: ").append(toIndentedString(warm)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the
	 * first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
